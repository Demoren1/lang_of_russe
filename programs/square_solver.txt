def main ( ) {
    strprint ( ax^2_+_bx_+_c_=_0 )
    strprint ( _input_a,_b,_c )
    input ( a ; b ; c )


    if ( abs ( a ) ) {
        solve_square ( a ; b ; c )
    }
    else {
        if ( abs ( b ) ) {
            solve_lin ( b ; c )
        }
        else {
            solve_identity ( c )
        }
    }

    return ( 0 )
}

def solve_square ( a ; b ; c ) {
    
    D = b ^ 2 - 4 * a * c
    
    if ( D > 0 ) {
        solve_full_square ( a ; b ; c ; D )
    }
    else {
        if ( abs ( D ) ) {
            strprint ( _no_roots_ )
        }
        else {
            find_one_root ( a ; b )
        }
    }

    return ( 0 )
   }


def solve_full_square ( a ; b ; c ; D ) {
    x1 = ( 0 - b  - ( D ) ^ 1 / 2 ) / ( 2 * a )
    x2 = ( 0 - b  + ( D ) ^ 1 / 2 ) / ( 2 * a )

    strprint ( _roots_are_ )
    print ( x1 ; x2 )

    return ( 0 )
}

def find_one_root ( a ; b ) {
    x = ( 0 - b ) / ( 2 * a )
    strprint ( _root_is_ )
    print ( x )

    return ( 0 )
}

def solve_lin ( b ; c ) {
    root = ( 0 - c ) / b

    strprint ( _root_is_ )
    print ( root )
}

def solve_identity ( c ) {
    if ( abs ( c ) ) {
        strprint ( _no_roots_ )
    }
    else {
        strprint ( _inf_roots_ )
    }
}
